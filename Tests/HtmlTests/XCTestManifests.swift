#if !canImport(ObjectiveC)
import XCTest

extension AriaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AriaTests = [
        ("testAriaAttributes", testAriaAttributes),
    ]
}

extension AttributesTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributesTests = [
        ("testAttributes", testAttributes),
    ]
}

extension ElementsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ElementsTests = [
        ("testBase64Snapshot", testBase64Snapshot),
    ]
}

extension EventsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EventsTests = [
        ("testEventsSnapshot", testEventsSnapshot),
    ]
}

extension MediaTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MediaTypeTests = [
        ("testMediaType", testMediaType),
    ]
}

extension StringInterpolationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringInterpolationTests = [
        ("testStringInterpolation", testStringInterpolation),
        ("testStringInterpolationEscaping", testStringInterpolationEscaping),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AriaTests.__allTests__AriaTests),
        testCase(AttributesTests.__allTests__AttributesTests),
        testCase(ElementsTests.__allTests__ElementsTests),
        testCase(EventsTests.__allTests__EventsTests),
        testCase(MediaTypeTests.__allTests__MediaTypeTests),
        testCase(StringInterpolationTests.__allTests__StringInterpolationTests),
    ]
}
#endif
